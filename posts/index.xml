<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Ftbom&#39;s Blog</title>
        <link>https://ftbom.github.io/posts/</link>
        <description>所有文章 | Ftbom&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lz490070@gmail.com (Ftbom)</managingEditor>
            <webMaster>lz490070@gmail.com (Ftbom)</webMaster><lastBuildDate>Fri, 25 Feb 2022 20:33:38 &#43;0800</lastBuildDate><atom:link href="https://ftbom.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Julia脚本文件中使用Plots绘图</title>
    <link>https://ftbom.github.io/julia_plot_in_file/</link>
    <pubDate>Fri, 25 Feb 2022 20:33:38 &#43;0800</pubDate><author>
        <name>Ftbom</name>
    </author><guid>https://ftbom.github.io/julia_plot_in_file/</guid>
    <description><![CDATA[<p></p>
<p>Julia是一种高级通用动态编程语言，可以用于数值分析和科学计算等。</p>
<p>Julia语言没有内建的作图能力， 作图需要通过安装扩展包来实现，常用的作图包有Gadfly、Plots和PyPlot。</p>
<p>本文介绍如何在Julia脚本文件中使用Plots进行绘图并正常显示绘图结果。</p>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Julia和Plots版本<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Julia v1.7.2</p>
<p>Plots v1.25.11</p>
</div>
        </div>
    </div>
<h2 id="在repl中运行脚本文件" class="headerLink">
    <a href="#%e5%9c%a8repl%e4%b8%ad%e8%bf%90%e8%a1%8c%e8%84%9a%e6%9c%ac%e6%96%87%e4%bb%b6" class="header-mark"></a>在REPL中运行脚本文件</h2><p>在REPL中，Julia会对每个变量自动调用<code>display</code>函数进行显示。</p>
<p>于是，在REPL中直接使用<code>plot</code>函数就可以正常显示绘图结果。</p>
<p>在REPL中运行脚本文件的命令为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-julia" data-lang="julia"><span class="line"><span class="cl"><span class="n">include</span><span class="p">(</span><span class="s">&#34;path/to/script.jl&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="使用julia-pathtoscriptjl运行脚本文件" class="headerLink">
    <a href="#%e4%bd%bf%e7%94%a8julia-pathtoscriptjl%e8%bf%90%e8%a1%8c%e8%84%9a%e6%9c%ac%e6%96%87%e4%bb%b6" class="header-mark"></a>使用<code>julia path/to/script.jl</code>运行脚本文件</h2><p>不在REPL中运行脚本文件时，Julia不会自动调用<code>display</code>函数。</p>
<p>为了显示绘图结果，需要<a href="https://docs.juliaplots.org/latest/tutorial/#Plotting-in-Scripts" target="_blank" rel="noopener noreffer">在代码中调用<code>display</code>函数</a>。</p>
<p>但是，使用<code>julia path/to/script.jl</code>运行脚本文件时，程序会在文件中所有语句执行完毕后退出，这样就看不到绘图结果。</p>
<p>为了防止Julia执行完所有语句后退出，可以在脚本文件的末尾使用<code>readline</code>函数。</p>
<p>这种运行方式下需将代码做如下更改：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-julia" data-lang="julia"><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>改为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-julia" data-lang="julia"><span class="line"><span class="cl"><span class="n">display</span><span class="p">(</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="n">readline</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后终端运行<code>julia path/to/script.jl</code>即可得到绘图结果。</p>
<h2 id="使用vscode插件julia运行脚本文件" class="headerLink">
    <a href="#%e4%bd%bf%e7%94%a8vscode%e6%8f%92%e4%bb%b6julia%e8%bf%90%e8%a1%8c%e8%84%9a%e6%9c%ac%e6%96%87%e4%bb%b6" class="header-mark"></a>使用VScode插件Julia运行脚本文件</h2><p>使用Julia插件运行代码时，会自动将绘图结果显示在一个新的标签栏中，于是直接使用<code>plot</code>函数就可以得到绘图结果。</p>
<p>需要注意的是：<strong>不可使用Code Runner插件来运行脚本文件，而要使用Julia插件来运行脚本文件</strong>。</p>
]]></description>
</item><item>
    <title>在Android设备上安装JupyterLab</title>
    <link>https://ftbom.github.io/install-jupyterlab-in-android/</link>
    <pubDate>Mon, 14 Feb 2022 19:53:10 &#43;0800</pubDate><author>
        <name>Ftbom</name>
    </author><guid>https://ftbom.github.io/install-jupyterlab-in-android/</guid>
    <description><![CDATA[<p></p>
<h2 id="jupyterlab简介" class="headerLink">
    <a href="#jupyterlab%e7%ae%80%e4%bb%8b" class="header-mark"></a>JupyterLab简介</h2><p><a href="https://jupyterlab.readthedocs.io/en/stable/" target="_blank" rel="noopener noreffer">JupyterLab</a>是一个基于Web的集成开发环境。在JupyterLab中可以通过安装kernel来运行各种代码，还可以在代码块之间插入Markdown文本，同时JupyterLab也提供了终端管理的功能。</p>
<p>Android设备易于携带，JupyterLab基于Web易于分享，通过在Android设备上安装JupyterLab，可以获得一个强大又便捷的集成开发环境。</p>
<p>虽然可以通过<a href="https://play.google.com/store/apps/details?id=ru.iiec.pydroid3" target="_blank" rel="noopener noreffer">Pydroid3</a>方便地安装JupyterLab，但为了充分使用其强大的功能，推荐使用<a href="https://termux.com/" target="_blank" rel="noopener noreffer">Termux</a>或<a href="https://userland.tech/" target="_blank" rel="noopener noreffer">UserLAnd</a>来安装JupyterLab。</p>
<h2 id="在termux中安装jupyterlab" class="headerLink">
    <a href="#%e5%9c%a8termux%e4%b8%ad%e5%ae%89%e8%a3%85jupyterlab" class="header-mark"></a>在Termux中安装JupyterLab</h2><p>Termux是Android系统上的一个高级终端模拟器，可以运行很多Linux系统的软件。通过Termux，在Android系统上可以获得类似于Linux系统的使用体验。Termux的使用教程推荐国光大佬的<a href="https://www.sqlsec.com/2018/05/termux.html" target="_blank" rel="noopener noreffer">Termux 高级终端安装使用配置教程</a>。</p>
<h3 id="termux初始化" class="headerLink">
    <a href="#termux%e5%88%9d%e5%a7%8b%e5%8c%96" class="header-mark"></a>Termux初始化</h3><p>Termux第一次启动时需要联网进行初始化。</p>
<blockquote>
<p>如果初始化失败请尝试使用代理</p>
</blockquote>
<p>初始化完成后输入以下代码获取存储空间访问权限：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">termux-setup-storage
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装python和各项依赖" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85python%e5%92%8c%e5%90%84%e9%a1%b9%e4%be%9d%e8%b5%96" class="header-mark"></a>安装Python和各项依赖</h3><p>安装Python：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pkg install python
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用pkg命令安装软件包时会先更新软件源再进行安装。</p>
<p>安装所需依赖：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pkg install clang python fftw libzmq freetype libpng pkg-config libcrypt
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装jupyterlab并运行" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85jupyterlab%e5%b9%b6%e8%bf%90%e8%a1%8c" class="header-mark"></a>安装JupyterLab并运行</h3><p>在Termux中安装的Python已经带有pip，通过以下命令安装JupyterLab：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pip install jupyterlab
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">jupyter-lab
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行Notebook：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">jupyter notebook
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="在userland中安装jupyterlab" class="headerLink">
    <a href="#%e5%9c%a8userland%e4%b8%ad%e5%ae%89%e8%a3%85jupyterlab" class="header-mark"></a>在UserLAnd中安装JupyterLab</h2><p>UserLAnd使Linux发行版和Linux软件可以在Android设备上运行，而无需root权限。UserLAnd提供多种Linux发行版和软件供用户安装，推荐安装Ubuntu系统，使用SSH作为连接方式。</p>
<h3 id="userland安装ubuntu" class="headerLink">
    <a href="#userland%e5%ae%89%e8%a3%85ubuntu" class="header-mark"></a>UserLAnd安装Ubuntu</h3><p>连接上网络后选择Ubuntu系统，设置用户名、密码和VNC密码并选择一种连接方式，然后下载即可。</p>
<blockquote>
<p>如果安装失败请尝试使用代理</p>
</blockquote>
<h3 id="安装python3和各项依赖" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85python3%e5%92%8c%e5%90%84%e9%a1%b9%e4%be%9d%e8%b5%96" class="header-mark"></a>安装Python3和各项依赖</h3><p>安装完成后使用选择的连接方式登入系统，进行Python和依赖的安装。</p>
<p>首先更新软件源：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt update
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装Python3：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt install python3
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装所需依赖：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt install python3-dev python3-pip python3-pyrsistent
</span></span></code></pre></td></tr></table>
</div>
</div><p>将JupyterLab的安装目录添加到环境变量：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#将username更改为设置的用户名
</span></span><span class="line"><span class="cl">export PATH=$PATH:/home/username/.local/bin
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装jupyterlab并运行-1" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85jupyterlab%e5%b9%b6%e8%bf%90%e8%a1%8c-1" class="header-mark"></a>安装JupyterLab并运行</h3><p>安装JupyterLab：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pip install jupyterlab
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">jupyter-lab
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行Notebook：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">jupyter notebook
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置jupyterlab允许其他设备访问" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aejupyterlab%e5%85%81%e8%ae%b8%e5%85%b6%e4%bb%96%e8%ae%be%e5%a4%87%e8%ae%bf%e9%97%ae" class="header-mark"></a>配置JupyterLab允许其他设备访问</h2><p>JupyterLab默认不允许其他设备访问，可通过更改配置文件来允许其他设备访问。</p>
<p>查看.jupyter目录下的文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ls ~/.jupyter
</span></span></code></pre></td></tr></table>
</div>
</div><p>由于jupyter_notebook_config.json文件的优先级高于其他配置文件，若存在jupyter_notebook_config.json文件则删除此文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">rm ~/.jupyter/jupyter_notebook_config.json
</span></span></code></pre></td></tr></table>
</div>
</div><p>生成配置文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">jupyter notebook --generate-config
</span></span></code></pre></td></tr></table>
</div>
</div><p>配置文件名为jupyter_notebook_config.py。</p>
<p>当JupyterLab能被其他设备访问时，最好为JupyterLab设置访问密码。设置密码需要生成密码的散列值，这样即使获取到了散列值，也几乎无法逆向获取到密码。</p>
<p>打开Python交互界面，运行以下代码并按提示输入密码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">notebook.auth</span> <span class="kn">import</span> <span class="n">passwd</span>
</span></span><span class="line"><span class="cl"><span class="n">passwd</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>输出结果即为密码的散列值。</p>
<p>打开jupyter_notebook_config.py，对如下选项进行设置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">c</span><span class="o">.</span><span class="n">NotebookApp</span><span class="o">.</span><span class="n">ip</span> <span class="o">=</span> <span class="s1">&#39;*&#39;</span>  <span class="c1"># 允许访问JupyterLab的IP，*表示任意IP</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="o">.</span><span class="n">NotebookApp</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="sa">u</span><span class="s1">&#39;生成的密码散列值&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="o">.</span><span class="n">NotebookApp</span><span class="o">.</span><span class="n">port</span> <span class="o">=</span> <span class="mi">8888</span> <span class="c1"># 使用的端口，默认8888</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="o">.</span><span class="n">NotebookApp</span><span class="o">.</span><span class="n">token</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span> <span class="c1"># 不使用token</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>设置好后就可以通过<code>http://ip:port</code>访问JupyterLab了。</p>
]]></description>
</item></channel>
</rss>
