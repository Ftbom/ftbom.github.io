[{"categories":["技术"],"content":"Julia是一种高级通用动态编程语言，可以用于数值分析和科学计算等。 Julia语言没有内建的作图能力， 作图需要通过安装扩展包来实现，常用的作图包有Gadfly、Plots和PyPlot。 本文介绍如何在Julia脚本文件中使用Plots进行绘图并正常显示绘图结果。 Julia和Plots版本\r\rJulia v1.7.2 Plots v1.25.11 \r\r ","date":"2022-02-25","objectID":"/julia_plot_in_file/:0:0","series":null,"tags":["Julia"],"title":"Julia脚本文件中使用Plots绘图","uri":"/julia_plot_in_file/#"},{"categories":["技术"],"content":"在REPL中运行脚本文件在REPL中，Julia会对每个变量自动调用display函数进行显示。 于是，在REPL中直接使用plot函数就可以正常显示绘图结果。 在REPL中运行脚本文件的命令为： include(\"path/to/script.jl\") ","date":"2022-02-25","objectID":"/julia_plot_in_file/:1:0","series":null,"tags":["Julia"],"title":"Julia脚本文件中使用Plots绘图","uri":"/julia_plot_in_file/#在repl中运行脚本文件"},{"categories":["技术"],"content":"使用julia path/to/script.jl运行脚本文件不在REPL中运行脚本文件时，Julia不会自动调用display函数。 为了显示绘图结果，需要在代码中调用display函数。 但是，使用julia path/to/script.jl运行脚本文件时，程序会在文件中所有语句执行完毕后退出，这样就看不到绘图结果。 为了防止Julia执行完所有语句后退出，可以在脚本文件的末尾使用readline函数。 这种运行方式下需将代码做如下更改： plot(x, y) 改为 display(plot(x, y)) ... readline() 然后终端运行julia path/to/script.jl即可得到绘图结果。 ","date":"2022-02-25","objectID":"/julia_plot_in_file/:2:0","series":null,"tags":["Julia"],"title":"Julia脚本文件中使用Plots绘图","uri":"/julia_plot_in_file/#使用julia-pathtoscriptjl运行脚本文件"},{"categories":["技术"],"content":"使用VScode插件Julia运行脚本文件使用Julia插件运行代码时，会自动将绘图结果显示在一个新的标签栏中，于是直接使用plot函数就可以得到绘图结果。 需要注意的是：不可使用Code Runner插件来运行脚本文件，而要使用Julia插件来运行脚本文件。 ","date":"2022-02-25","objectID":"/julia_plot_in_file/:3:0","series":null,"tags":["Julia"],"title":"Julia脚本文件中使用Plots绘图","uri":"/julia_plot_in_file/#使用vscode插件julia运行脚本文件"},{"categories":["技术"],"content":"JupyterLab简介JupyterLab是一个基于Web的集成开发环境。在JupyterLab中可以通过安装kernel来运行各种代码，还可以在代码块之间插入Markdown文本，同时JupyterLab也提供了终端管理的功能。 Android设备易于携带，JupyterLab基于Web易于分享，通过在Android设备上安装JupyterLab，可以获得一个强大又便捷的集成开发环境。 虽然可以通过Pydroid3方便地安装JupyterLab，但为了充分使用其强大的功能，推荐使用Termux或UserLAnd来安装JupyterLab。 ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:1:0","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#jupyterlab简介"},{"categories":["技术"],"content":"在Termux中安装JupyterLabTermux是Android系统上的一个高级终端模拟器，可以运行很多Linux系统的软件。通过Termux，在Android系统上可以获得类似于Linux系统的使用体验。Termux的使用教程推荐国光大佬的Termux 高级终端安装使用配置教程。 ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:2:0","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#在termux中安装jupyterlab"},{"categories":["技术"],"content":"Termux初始化Termux第一次启动时需要联网进行初始化。 如果初始化失败请尝试使用代理 初始化完成后输入以下代码获取存储空间访问权限： termux-setup-storage ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:2:1","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#termux初始化"},{"categories":["技术"],"content":"安装Python和各项依赖安装Python： pkg install python 使用pkg命令安装软件包时会先更新软件源再进行安装。 安装所需依赖： pkg install clang python fftw libzmq freetype libpng pkg-config libcrypt ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:2:2","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#安装python和各项依赖"},{"categories":["技术"],"content":"安装JupyterLab并运行在Termux中安装的Python已经带有pip，通过以下命令安装JupyterLab： pip install jupyterlab 运行: jupyter-lab 运行Notebook： jupyter notebook ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:2:3","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#安装jupyterlab并运行"},{"categories":["技术"],"content":"在UserLAnd中安装JupyterLabUserLAnd使Linux发行版和Linux软件可以在Android设备上运行，而无需root权限。UserLAnd提供多种Linux发行版和软件供用户安装，推荐安装Ubuntu系统，使用SSH作为连接方式。 ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:3:0","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#在userland中安装jupyterlab"},{"categories":["技术"],"content":"UserLAnd安装Ubuntu连接上网络后选择Ubuntu系统，设置用户名、密码和VNC密码并选择一种连接方式，然后下载即可。 如果安装失败请尝试使用代理 ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:3:1","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#userland安装ubuntu"},{"categories":["技术"],"content":"安装Python3和各项依赖安装完成后使用选择的连接方式登入系统，进行Python和依赖的安装。 首先更新软件源： sudo apt update 安装Python3： sudo apt install python3 安装所需依赖： sudo apt install python3-dev python3-pip python3-pyrsistent 将JupyterLab的安装目录添加到环境变量： #将username更改为设置的用户名 export PATH=$PATH:/home/username/.local/bin ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:3:2","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#安装python3和各项依赖"},{"categories":["技术"],"content":"安装JupyterLab并运行安装JupyterLab： pip install jupyterlab 运行: jupyter-lab 运行Notebook： jupyter notebook ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:3:3","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#安装jupyterlab并运行-1"},{"categories":["技术"],"content":"配置JupyterLab允许其他设备访问JupyterLab默认不允许其他设备访问，可通过更改配置文件来允许其他设备访问。 查看.jupyter目录下的文件： ls ~/.jupyter 由于jupyter_notebook_config.json文件的优先级高于其他配置文件，若存在jupyter_notebook_config.json文件则删除此文件： rm ~/.jupyter/jupyter_notebook_config.json 生成配置文件： jupyter notebook --generate-config 配置文件名为jupyter_notebook_config.py。 当JupyterLab能被其他设备访问时，最好为JupyterLab设置访问密码。设置密码需要生成密码的散列值，这样即使获取到了散列值，也几乎无法逆向获取到密码。 打开Python交互界面，运行以下代码并按提示输入密码： from notebook.auth import passwd passwd() 输出结果即为密码的散列值。 打开jupyter_notebook_config.py，对如下选项进行设置： c.NotebookApp.ip = '*' # 允许访问JupyterLab的IP，*表示任意IP c.NotebookApp.password = u'生成的密码散列值' c.NotebookApp.port = 8888 # 使用的端口，默认8888 c.NotebookApp.token = '' # 不使用token 设置好后就可以通过http://ip:port访问JupyterLab了。 ","date":"2022-02-14","objectID":"/install-jupyterlab-in-android/:4:0","series":null,"tags":["Termux","Jupyter","UserLAnd"],"title":"在Android设备上安装JupyterLab","uri":"/install-jupyterlab-in-android/#配置jupyterlab允许其他设备访问"}]