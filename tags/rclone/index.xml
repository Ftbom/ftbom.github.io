<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Rclone - 标签 - Ftbom&#39;s Blog</title>
        <link>https://ftbom.github.io/tags/rclone/</link>
        <description>Rclone - 标签 - Ftbom&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lz490070@gmail.com (Ftbom)</managingEditor>
            <webMaster>lz490070@gmail.com (Ftbom)</webMaster><lastBuildDate>Tue, 25 Jul 2023 15:36:18 &#43;0800</lastBuildDate><atom:link href="https://ftbom.github.io/tags/rclone/" rel="self" type="application/rss+xml" /><item>
    <title>基于Python的Rclone Crypt储存解密</title>
    <link>https://ftbom.github.io/rclone_decrypt_by_python/</link>
    <pubDate>Tue, 25 Jul 2023 15:36:18 &#43;0800</pubDate><author>
        <name>Ftbom</name>
    </author><guid>https://ftbom.github.io/rclone_decrypt_by_python/</guid>
    <description><![CDATA[<div style="text-align: center;">
    
</div>
<p><a href="https://rclone.org/" target="_blank" rel="noopener noreferrer">Rclone</a>支持将其他储存添加为<a href="https://rclone.org/crypt/" target="_blank" rel="noopener noreferrer">Crypt</a>类型的储存，用于加密存储的文件。</p>
<p>本文旨在简要介绍Rclone Crypt储存的加密原理，并给出Python实现的解密代码。在本文基础上，编写了rclone加密/解密代码<a href="https://github.com/Ftbom/rclone_crypt_py" target="_blank" rel="noopener noreferrer">rclone_crypt_py</a>。</p>
<h2 id="加密密码" class="headerLink">
    <a href="#%e5%8a%a0%e5%af%86%e5%af%86%e7%a0%81" class="header-mark"></a>加密密码</h2><p>rclone加密有两个可设置的密码，分别记作passwd1和passwd2。其中passwd2可不设置，若不设置则使用默认值，默认值为<code>\xA8\x0D\xF4\x3A\x8F\xBD\x03\x08\xA7\xCA\xB8\x3E\x58\x1F\x86\xB1</code></p>
<p>基于passwd1和passwd2，生成用于文件加密和文件名加密的密钥。生成密钥的算法为<a href="https://en.wikipedia.org/wiki/Scrypt" target="_blank" rel="noopener noreferrer">scrypt</a>，scrypt算法的参数为<code>N=16384, r=8, p=1</code>，生成密钥的长度为80bytes。其中前32bytes用于文件加密，32-64bytes和64bytes之后的数据用于文件名加密。</p>
<p>通过passwd1和passwd2生成加密密钥的代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">Crypto.Protocol.KDF</span> <span class="kn">import</span> <span class="n">scrypt</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">KEY_SIZE</span> <span class="o">=</span> <span class="mi">32</span> <span class="o">+</span> <span class="mi">32</span> <span class="o">+</span> <span class="mi">16</span> <span class="c1"># scrypt生成密钥的长度</span>
</span></span><span class="line"><span class="cl"><span class="n">DEFAULT_SALT</span> <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xA8\x0D\xF4\x3A\x8F\xBD\x03\x08\xA7\xCA\xB8\x3E\x58\x1F\x86\xB1</span><span class="s2">&#34;</span> <span class="c1"># rclone默认salt</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">salt</span> <span class="o">=</span> <span class="n">passwd2</span> <span class="k">if</span> <span class="n">passwd2</span> <span class="k">else</span> <span class="n">DEFAULT_SALT</span>
</span></span><span class="line"><span class="cl"><span class="n">key</span> <span class="o">=</span> <span class="n">scrypt</span><span class="p">(</span><span class="n">passwd</span><span class="p">,</span> <span class="n">salt</span><span class="p">,</span> <span class="n">KEY_SIZE</span><span class="p">,</span> <span class="mi">16384</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">dataKey</span> <span class="o">=</span> <span class="n">key</span><span class="p">[:</span><span class="mi">32</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">nameKey</span> <span class="o">=</span> <span class="n">key</span><span class="p">[</span><span class="mi">32</span> <span class="p">:</span> <span class="mi">64</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">nameTweak</span> <span class="o">=</span> <span class="n">key</span><span class="p">[</span><span class="mi">64</span> <span class="p">:]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="文件加密" class="headerLink">
    <a href="#%e6%96%87%e4%bb%b6%e5%8a%a0%e5%af%86" class="header-mark"></a>文件加密</h2><p>加密后的文件由两部分组成，文件头和数据块。</p>
<p>其中文件头分为两部分：</p>
<ul>
<li>固定rclone文件头
<blockquote>
<p>8 bytes，RCLONE\x00\x00</p>
</blockquote>
</li>
<li>用于数据块解密的Nonce
<blockquote>
<p>24 bytes</p>
</blockquote>
</li>
</ul>
<p>文件头中的Nonce是加密时系统随机生成的，用于初始数据块加密。</p>
<p>每加密一个数据块，Nonce改变一次，以确保每个数据块的Nonce不同。在rclone的加密算法中，更改Nonce的方法为最左一位byte数字加一。实现代码为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 单byte加1</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">byte_increment</span><span class="p">(</span><span class="n">byte</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">byte</span> <span class="o">&gt;</span> <span class="mi">255</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;byte must be in range(0, 256)&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="p">(</span><span class="n">byte</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="p">(</span><span class="n">byte</span> <span class="o">&lt;</span> <span class="mi">255</span><span class="p">)</span> <span class="k">else</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># nonce加1</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">nonce_increment</span><span class="p">(</span><span class="n">nonce</span><span class="p">:</span> <span class="nb">bytes</span><span class="p">,</span> <span class="n">start</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bytes</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">nonce_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">nonce</span><span class="p">)</span> <span class="c1"># 转为数组</span>
</span></span><span class="line"><span class="cl">	<span class="c1"># 加1操作</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">nonce</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">		<span class="n">digit</span> <span class="o">=</span> <span class="n">nonce_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="n">newDigit</span> <span class="o">=</span> <span class="n">byte_increment</span><span class="p">(</span><span class="n">digit</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="n">nonce_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">newDigit</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="n">newDigit</span> <span class="o">&gt;=</span> <span class="n">digit</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="k">break</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">nonce_array</span><span class="p">)</span> <span class="c1">#转回bytes</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>除了最后一个数据块外，每个数据块包含16 + 64 * 1024bytes数据，其中16bytes是用于验证的数据头，64 * 1024bytes是64 * 1024bytes原始数据加密后得到的数据。</p>
<p>文件块的加密算法是<a href="https://nacl.cr.yp.to/" target="_blank" rel="noopener noreferrer">Nacl算法</a>。</p>
<p>使用python实现的解密代码为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">nacl.secret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">box</span> <span class="o">=</span> <span class="n">nacl</span><span class="o">.</span><span class="n">secret</span><span class="o">.</span><span class="n">SecretBox</span><span class="p">(</span><span class="n">dataKey</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">file_decrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">input_file_path</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">output_file_path</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">input_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">input_file_path</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">FileNotFoundError</span><span class="p">(</span><span class="s1">&#39;input file not found&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">output_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">output_file_path</span><span class="p">,</span> <span class="s1">&#39;wb&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;failed to write output file&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="c1"># 读取头</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="ow">not</span> <span class="n">input_file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">FILEMAGIC_SIZE</span><span class="p">)</span> <span class="o">==</span> <span class="sa">b</span><span class="s1">&#39;RCLONE</span><span class="se">\x00\x00</span><span class="s1">&#39;</span><span class="p">:</span> <span class="c1"># 标准头</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;not encrypted rclone file&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">Nonce</span> <span class="o">=</span> <span class="n">input_file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">FILENONCE_SIZE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="c1"># 读取文件块</span>
</span></span><span class="line"><span class="cl">	<span class="c1"># 16为头</span>
</span></span><span class="line"><span class="cl">	<span class="c1"># 64kb数据</span>
</span></span><span class="line"><span class="cl">	<span class="n">input_bytes</span> <span class="o">=</span> <span class="n">input_file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">BLOCKDATA_SIZE</span> <span class="o">+</span> <span class="n">BLOCKHEADER_SIZE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">while</span> <span class="p">(</span><span class="n">input_bytes</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">			<span class="n">output_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">box</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">input_bytes</span><span class="p">,</span> <span class="n">Nonce</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">			<span class="n">Nonce</span> <span class="o">=</span> <span class="n">nonce_increment</span><span class="p">(</span><span class="n">Nonce</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="n">input_bytes</span> <span class="o">=</span> <span class="n">input_file</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">BLOCKDATA_SIZE</span> <span class="o">+</span> <span class="n">BLOCKHEADER_SIZE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s1">&#39;failed to decrypt file&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">input_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="n">output_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="文件名加密" class="headerLink">
    <a href="#%e6%96%87%e4%bb%b6%e5%90%8d%e5%8a%a0%e5%af%86" class="header-mark"></a>文件名加密</h2><p>文件名有两种加密方式：</p>
<ul>
<li>standard
<blockquote>
<ol>
<li>文件名补全为16bytes的倍数，补全算法为<a href="https://en.wikipedia.org/wiki/PKCS_7" target="_blank" rel="noopener noreferrer">PKCS#7</a></li>
<li>使用<a href="https://eprint.iacr.org/2003/147.pdf" target="_blank" rel="noopener noreferrer">EME(ECB-Mix-ECB)</a>算法对补全后的文件名进行加密</li>
</ol>
<blockquote>
<p>使用生成的nameKey和nameTweak进行加密</p>
</blockquote>
<ol start="3">
<li>对加密结果进行base32编码</li>
<li>去除结果中的<code>=</code></li>
</ol>
</blockquote>
</li>
<li>obfuscate
<blockquote>
<p>简单的文件名混淆，每个文件名都有一个对应的混淆距离。加密后的文件名为：<code>&lt;混淆距离&gt;.&lt;混淆后文件名&gt;</code></p>
</blockquote>
</li>
</ul>
<p>standard解密代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">.eme</span> <span class="kn">import</span> <span class="n">Decrypt</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">cipher</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">nameKey</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">name_standard_decrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">filename</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">filename</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="n">padding_num</span> <span class="o">=</span> <span class="mi">8</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span> <span class="o">%</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">	<span class="n">filename</span> <span class="o">=</span> <span class="n">filename</span> <span class="o">+</span> <span class="n">padding_num</span> <span class="o">*</span> <span class="s1">&#39;=&#39;</span> <span class="c1"># 添加padding</span>
</span></span><span class="line"><span class="cl">	<span class="n">filename</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b32hexdecode</span><span class="p">(</span><span class="n">filename</span><span class="o">.</span><span class="n">upper</span><span class="p">())</span> <span class="c1"># base32解码</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;too short to decrypt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">2048</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;too long to decrypt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">unpad</span><span class="p">(</span><span class="n">Decrypt</span><span class="p">(</span><span class="n">cipher</span><span class="p">,</span> <span class="n">nameTweak</span><span class="p">,</span> <span class="n">filename</span><span class="p">),</span> <span class="mi">16</span><span class="p">,</span> <span class="n">style</span> <span class="o">=</span> <span class="s1">&#39;pkcs7&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="c1"># EME解密</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>obfuscate解密代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">name_obfuscate_decrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">filename</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">filename</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="n">pos</span> <span class="o">=</span> <span class="n">filename</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">pos</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;not obfuscate encrypted filename&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">num</span> <span class="o">=</span> <span class="n">filename</span><span class="p">[:</span> <span class="n">pos</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="s1">&#39;!&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">filename</span><span class="p">[</span><span class="n">pos</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">:]</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">dir_</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;not obfuscate encrypted filename&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">__nameKey</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">dir_</span> <span class="o">=</span> <span class="n">dir_</span> <span class="o">+</span> <span class="n">i</span>
</span></span><span class="line"><span class="cl">	<span class="n">inQuote</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">	<span class="n">out_filename</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="n">str_</span> <span class="ow">in</span> <span class="n">filename</span><span class="p">[</span><span class="n">pos</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">:]:</span>
</span></span><span class="line"><span class="cl">		<span class="n">code</span> <span class="o">=</span> <span class="nb">ord</span><span class="p">(</span><span class="n">str_</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="n">inQuote</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">out_filename</span> <span class="o">=</span> <span class="n">out_filename</span> <span class="o">+</span> <span class="n">str_</span>
</span></span><span class="line"><span class="cl">		<span class="k">elif</span> <span class="n">code</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;!&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">			<span class="n">inQuote</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">		<span class="k">elif</span> <span class="n">code</span> <span class="o">&gt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;0&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="n">code</span> <span class="o">&lt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;9&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">			<span class="n">thisdir</span> <span class="o">=</span> <span class="p">(</span><span class="n">dir_</span> <span class="o">%</span> <span class="mi">9</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">			<span class="n">newRune</span> <span class="o">=</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;0&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">code</span> <span class="o">-</span> <span class="s1">&#39;0&#39;</span> <span class="o">-</span> <span class="n">thisdir</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="n">newRune</span> <span class="o">&lt;</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;0&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">				<span class="n">newRune</span> <span class="o">=</span> <span class="n">newRune</span> <span class="o">+</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">			<span class="n">out_filename</span> <span class="o">=</span> <span class="n">out_filename</span> <span class="o">+</span> <span class="nb">chr</span><span class="p">(</span><span class="n">newRune</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">elif</span> <span class="p">(</span><span class="n">code</span> <span class="o">&gt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="n">code</span> <span class="o">&lt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;Z&#39;</span><span class="p">))</span> <span class="ow">or</span> <span class="p">(</span><span class="n">code</span> <span class="o">&gt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="n">code</span> <span class="o">&lt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;z&#39;</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">			<span class="n">thisdir</span> <span class="o">=</span> <span class="n">dir_</span> <span class="o">%</span> <span class="mi">25</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">			<span class="n">pos</span> <span class="o">=</span> <span class="n">code</span> <span class="o">-</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="n">pos</span> <span class="o">&gt;=</span> <span class="mi">26</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">				<span class="n">pos</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">-</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl">			<span class="n">pos</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">-</span> <span class="n">thisdir</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="n">pos</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">				<span class="n">pos</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="mi">52</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="n">pos</span> <span class="o">&gt;=</span> <span class="mi">26</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">				<span class="n">pos</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="mi">6</span>
</span></span><span class="line"><span class="cl">			<span class="n">out_filename</span> <span class="o">=</span> <span class="n">out_filename</span> <span class="o">+</span> <span class="nb">chr</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">pos</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">elif</span> <span class="n">code</span> <span class="o">&gt;=</span> <span class="mh">0xa0</span> <span class="ow">and</span> <span class="n">code</span> <span class="o">&lt;=</span> <span class="mh">0xff</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">thisdir</span> <span class="o">=</span> <span class="p">(</span><span class="n">dir_</span> <span class="o">%</span> <span class="mi">95</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">			<span class="n">newRune</span> <span class="o">=</span> <span class="mh">0xa0</span> <span class="o">+</span> <span class="n">code</span> <span class="o">-</span> <span class="mh">0xa0</span> <span class="o">-</span> <span class="n">thisdir</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="n">newRune</span> <span class="o">&lt;</span> <span class="mh">0xa0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">				<span class="n">newRune</span> <span class="o">=</span> <span class="n">newRune</span> <span class="o">+</span> <span class="mi">96</span>
</span></span><span class="line"><span class="cl">			<span class="n">out_filename</span> <span class="o">=</span> <span class="n">out_filename</span> <span class="o">+</span> <span class="nb">chr</span><span class="p">(</span><span class="n">newRune</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">elif</span> <span class="n">code</span> <span class="o">&gt;=</span> <span class="mh">0x100</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">thisdir</span> <span class="o">=</span> <span class="p">(</span><span class="n">dir_</span> <span class="o">%</span> <span class="mi">127</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">			<span class="n">base</span> <span class="o">=</span> <span class="n">code</span> <span class="o">-</span> <span class="n">code</span> <span class="o">%</span> <span class="mi">256</span>
</span></span><span class="line"><span class="cl">			<span class="n">newRune</span> <span class="o">=</span> <span class="n">base</span> <span class="o">+</span> <span class="n">code</span> <span class="o">-</span> <span class="n">base</span> <span class="o">-</span> <span class="n">thisdir</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="n">newRune</span> <span class="o">&lt;</span> <span class="n">base</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">				<span class="n">newRune</span> <span class="o">=</span> <span class="n">newRune</span> <span class="o">+</span> <span class="mi">256</span>
</span></span><span class="line"><span class="cl">			<span class="n">out_filename</span> <span class="o">=</span> <span class="n">out_filename</span> <span class="o">+</span> <span class="nb">chr</span><span class="p">(</span><span class="n">newRune</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">out_filename</span> <span class="o">=</span> <span class="n">out_filename</span> <span class="o">+</span> <span class="nb">chr</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">out_filename</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
